import{b}from"./chunk-6ELPNVMG.js";import{e as A}from"./chunk-RAMEUAPV.js";import{a as l,d as g,f as v,h as w}from"./chunk-4XUOIGFO.js";import{a as h}from"./chunk-GJP6PTKT.js";import{e as m}from"./chunk-JOSG37QF.js";import{L as a}from"./chunk-AUTL5LCV.js";import{S as y}from"./chunk-KUJG22IX.js";import{a as i}from"./chunk-W3WDPWBE.js";import{k as d,m as f,s as V}from"./chunk-GISCFF3Z.js";import{e as o}from"./chunk-MLSR6YE6.js";import{r as u}from"./chunk-HQMV3KQV.js";import{d as _,h as p}from"./chunk-EAH6BNBL.js";var c;(function(t){t[t.PENDING=0]="PENDING",t[t.WAIT_FOR_VIEW_READY=1]="WAIT_FOR_VIEW_READY",t[t.RUNNING=2]="RUNNING"})(c||(c={}));var n=class extends b{constructor(t={}){super(t),this.analysisView=null,this._reconnectViewTask=null,this._parentChangeFromReconnect=!1,this._startUserOperation=null;let s=t?.analysis;s!=null?this.analysis=s:(this._set("analysis",this.constructAnalysis()),this._set("isAnalysisOwner",!0))}normalizeCtorArgs(t){let r=t,{analysis:s}=r;return _(r,["analysis"])}initialize(){this.addHandles([l(()=>this.analysis?.parent,t=>{this._parentChangeFromReconnect||t===this.view||this._set("isAnalysisOwner",!1);let s=!this._parentChangeFromReconnect;this._parentChangeFromReconnect=!1,s&&this._scheduleViewReconnect()},v),l(()=>({view:this.view,ready:this.view!=null&&this.view.ready,supported:this.supported}),({view:t},s)=>{let e=s?.view;t!==e&&(this._startUserOperation=o(this._startUserOperation),this._disconnectFromView(e)),this._scheduleViewReconnect()},w),l(()=>this.analysis.isEditable,(t,s)=>{this.analysisView!=null&&(t&&!s&&this.tool==null?this.createTool():t||!s||this.tool==null||this.tool.active||this.removeTool())})])}destroy(){this._reconnectViewTask=o(this._reconnectViewTask),this._startUserOperation=o(this._startUserOperation),this.analysisView!=null&&(this.analysisView.visible=void 0),this._disconnectFromView(this.view),this.analysis!=null&&this.isAnalysisOwner&&(this.analysis.destroy(),this._set("analysis",null))}set analysis(t){t!==this._get("analysis")&&(this._startUserOperation=o(this._startUserOperation),this._disconnectFromView(this.view),this._setExternalAnalysis(t),this._scheduleViewReconnect())}get ready(){return this.analysisView!=null&&!this.connectingToView}get connectingToView(){return this._reconnectViewTask!=null}get isAnalysisOwner(){return this._get("isAnalysisOwner")}set visible(t){this._set("visible",t),this.analysisView!=null&&(this.analysisView.visible=t)}start(){return p(this,null,function*(){if(!this.visible)return void u.getLogger(this).warn("Cannot start analysis when not visible");this.clear();let t={task:null,abort:null,state:c.PENDING},s=m(e=>p(this,null,function*(){t.state=c.WAIT_FOR_VIEW_READY,yield g(()=>this.ready,e),t.state=c.RUNNING,this.createTool({interactive:!0})}));return t.task=s,t.abort=()=>s.abort(),this._startUserOperation=t,s.promise})}clear(){this._startUserOperation=o(this._startUserOperation),this.removeTool(),this.analysis.clear()}onConnectToAnalysisView(t){}onDisconnectFromAnalysisView(){}_scheduleViewReconnect(){this._reconnectViewTask=o(this._reconnectViewTask);let t=m(s=>p(this,null,function*(){try{yield this._reconnectView(s)}catch(e){if(d(s),!V(e))return void u.getLogger(this).warn("Failed to use analysis in view model",e);throw e}finally{t===this._reconnectViewTask&&(this._reconnectViewTask=null)}}));this._reconnectViewTask=t}_reconnectView(t){return p(this,null,function*(){let{view:s}=this,e=s!=null&&s.ready&&this.supported,r=this.analysis;if(this._startUserOperation=T(this._startUserOperation),this._disconnectFromView(s),e&&s!=null&&r!=null){if(this.isAnalysisOwner){if(r.parent!=null)return void this.logError("expected owned analysis to have null parent when connecting to view");this._parentChangeFromReconnect=!0,s.analyses.add(r)}this.analysisView=yield s.whenAnalysisView(r),f(t)?this._startUserOperation=T(this._startUserOperation):(this.analysisView.visible=this.visible,this.onConnectToAnalysisView(this.analysisView),this.createTool())}})}_disconnectFromView(t){this.removeTool(),t!=null&&this.isAnalysisOwner&&(this._parentChangeFromReconnect=!0,t.analyses.remove(this.analysis),this.analysis.clear()),this.analysisView=null,this.onDisconnectFromAnalysisView()}_setExternalAnalysis(t){this.analysisView==null||this.isAnalysisOwner||(this.analysisView.visible=!0),this.analysisView=null,this._set("isAnalysisOwner",!1),this._set("analysis",t),this._parentChangeFromReconnect=!1}get testInfo(){}};function T(t){return t!=null&&t.state>=c.RUNNING?(t.abort(),null):t}i([a({nonNullable:!0})],n.prototype,"analysis",null),i([a()],n.prototype,"analysisView",void 0),i([a()],n.prototype,"ready",null),i([a()],n.prototype,"connectingToView",null),i([a({readOnly:!0})],n.prototype,"isAnalysisOwner",null),i([a({type:Boolean,value:!0})],n.prototype,"visible",null),i([a()],n.prototype,"_reconnectViewTask",void 0),n=i([y("esri.widgets.support.InteractiveAnalysisViewModel")],n);function et(t){return t.pointerType!=="mouse"||t.button===0}var it={hasM:!1,hasZ:!0,rings:[[h(),h(),h(),h()]],spatialReference:null,type:"polygon"},nt=h();var O=class extends A{constructor(t){super(t)}initialize(){this.addHandles(l(()=>this.analysisViewData.visible,t=>this.visible=t,w))}deactivate(){this.onDeactivate(),this.created||this.analysis.clear()}resetCreated(){this._set("created",!1)}};O=i([y("esri.views.interactive.AnalysisToolBase")],O);export{et as a,O as b,n as c};
