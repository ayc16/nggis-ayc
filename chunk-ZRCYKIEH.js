import{a as b,c as G,g as A}from"./chunk-JXODTGE4.js";import{d as P}from"./chunk-L76YGILQ.js";import"./chunk-DJNDWEES.js";import{n as _,v as g}from"./chunk-YAIVKHQ7.js";import"./chunk-7QY3BMVN.js";import"./chunk-5L33MNIH.js";import"./chunk-TNPL7MIN.js";import"./chunk-J7IKN4ZN.js";import"./chunk-I3S324BU.js";import{c as y}from"./chunk-OM7Z3UKX.js";import"./chunk-KRMYHUR3.js";import"./chunk-R4NNYEN7.js";import{a as C}from"./chunk-J3ZDC5ZE.js";import"./chunk-DFTBSFIN.js";import"./chunk-4HISZWR4.js";import"./chunk-33BSK37G.js";import"./chunk-TQAPQODA.js";import"./chunk-MRVR6F6G.js";import"./chunk-WXQQZY3K.js";import"./chunk-VPMDQK57.js";import"./chunk-BCREO4Q5.js";import"./chunk-76YVRX2R.js";import"./chunk-OZF6BMOL.js";import"./chunk-GJP6PTKT.js";import"./chunk-RSDQHAJX.js";import"./chunk-SA4OMQAD.js";import{b as f}from"./chunk-24BLFS5R.js";import"./chunk-JDDD6VJ4.js";import"./chunk-VOYK3LZF.js";import"./chunk-XNEAL2YW.js";import"./chunk-J7M5V2SQ.js";import"./chunk-RQD6EDD6.js";import"./chunk-XPCG2OJX.js";import{F as m}from"./chunk-AUTL5LCV.js";import"./chunk-KUJG22IX.js";import"./chunk-OVHPPCBL.js";import"./chunk-W3WDPWBE.js";import"./chunk-GISCFF3Z.js";import"./chunk-MLSR6YE6.js";import"./chunk-SNFOAZZQ.js";import"./chunk-CPDJJRWA.js";import"./chunk-HQMV3KQV.js";import"./chunk-CRMMDK2Z.js";import{a as p,b as c}from"./chunk-EAH6BNBL.js";function x(i,e){return e}function l(i,e,t,r){switch(t){case 0:return h(i,e+r,0);case 1:return i.originPosition==="lowerLeft"?h(i,e+r,1):R(i,e+r,1)}}function v(i,e,t,r){return t===2?h(i,e,2):l(i,e,t,r)}function F(i,e,t,r){return t===2?h(i,e,3):l(i,e,t,r)}function M(i,e,t,r){return t===3?h(i,e,3):v(i,e,t,r)}function h({translate:i,scale:e},t,r){return i[r]+t*e[r]}function R({translate:i,scale:e},t,r){return i[r]-t*e[r]}var u=class{constructor(e){this._options=e,this.geometryTypes=["point","multipoint","polyline","polygon"],this._previousCoordinate=[0,0],this._transform=null,this._applyTransform=x,this._lengths=[],this._currentLengthIndex=0,this._toAddInCurrentPath=0,this._vertexDimension=0,this._coordinateBuffer=null,this._coordinateBufferPtr=0,this._attributesConstructor=class{},this._missingAttributes=[]}get missingAttributes(){return this._missingAttributes}createFeatureResult(){return new G}finishFeatureResult(e){if(this._options.applyTransform&&(e.transform=null),this._attributesConstructor=class{},this._coordinateBuffer=null,this._lengths.length=0,!e.hasZ)return;let t=C(e.geometryType,this._options.sourceSpatialReference,e.spatialReference);if(t!=null)for(let r of e.features)t(r.geometry)}createSpatialReference(){return new f}addField(e,t){e.fields.push(y.fromJSON(t));let r=e.fields.map(s=>s.name);this._attributesConstructor=function(){for(let s of r)this[s]=null}}addFeature(e,t){let r=this._options.maxStringAttributeLength,s=this._options.maxStringAttributeFields;A(t.attributes,s,r,n=>{let o=t.attributes[e.objectIdFieldName];o!=null&&this._missingAttributes.push({objectId:o,attribute:n})}),e.features.push(t)}addQueryGeometry(e,t){let{queryGeometry:r,queryGeometryType:s}=t,n=g(r.clone(),r,!1,!1,this._transform),o=_(n,s,!1,!1),a=null;switch(s){case"esriGeometryPoint":a="point";break;case"esriGeometryPolygon":a="polygon";break;case"esriGeometryPolyline":a="polyline";break;case"esriGeometryMultipoint":a="multipoint"}o.type=a,e.queryGeometryType=s,e.queryGeometry=o}prepareFeatures(e){switch(this._transform=e.transform??null,this._options.applyTransform&&e.transform&&(this._applyTransform=this._deriveApplyTransform(e)),this._vertexDimension=2,e.hasZ&&this._vertexDimension++,e.hasM&&this._vertexDimension++,e.geometryType){case"point":this.addCoordinate=(t,r,s)=>this.addCoordinatePoint(t,r,s),this.createGeometry=t=>this.createPointGeometry(t);break;case"polygon":this.addCoordinate=(t,r,s)=>this._addCoordinatePolygon(t,r,s),this.createGeometry=t=>this._createPolygonGeometry(t);break;case"polyline":this.addCoordinate=(t,r,s)=>this._addCoordinatePolyline(t,r,s),this.createGeometry=t=>this._createPolylineGeometry(t);break;case"multipoint":this.addCoordinate=(t,r,s)=>this._addCoordinateMultipoint(t,r,s),this.createGeometry=t=>this._createMultipointGeometry(t);break;case"mesh":case"extent":break;default:e.geometryType}}createFeature(){return this._lengths.length=0,this._currentLengthIndex=0,this._previousCoordinate[0]=0,this._previousCoordinate[1]=0,new b(m(),null,new this._attributesConstructor)}allocateCoordinates(){let e=this._lengths.reduce((t,r)=>t+r,0);this._coordinateBuffer=new Float64Array(e*this._vertexDimension),this._coordinateBufferPtr=0}addLength(e,t){this._lengths.length===0&&(this._toAddInCurrentPath=t),this._lengths.push(t)}createPointGeometry(e){let t={type:"point",x:0,y:0,spatialReference:e.spatialReference,hasZ:!!e.hasZ,hasM:!!e.hasM};return t.hasZ&&(t.z=0),t.hasM&&(t.m=0),t}addCoordinatePoint(e,t,r){let s=this._transform?this._applyTransform(this._transform,t,r,0):t;if(s!=null)switch(r){case 0:e.x=s;break;case 1:e.y=s;break;case 2:e.hasZ?e.z=s:e.m=s;break;case 3:e.m=s}}_transformPathLikeValue(e,t){let r=0;return t<=1&&(r=this._previousCoordinate[t],this._previousCoordinate[t]+=e),this._transform?this._applyTransform(this._transform,e,t,r):e}_addCoordinatePolyline(e,t,r){this._dehydratedAddPointsCoordinate(e.paths,t,r)}_addCoordinatePolygon(e,t,r){this._dehydratedAddPointsCoordinate(e.rings,t,r)}_addCoordinateMultipoint(e,t,r){r===0&&e.points.push([]);let s=this._transformPathLikeValue(t,r);e.points[e.points.length-1].push(s)}_createPolygonGeometry(e){return{type:"polygon",rings:[[]],spatialReference:e.spatialReference,hasZ:!!e.hasZ,hasM:!!e.hasM}}_createPolylineGeometry(e){return{type:"polyline",paths:[[]],spatialReference:e.spatialReference,hasZ:!!e.hasZ,hasM:!!e.hasM}}_createMultipointGeometry(e){return{type:"multipoint",points:[],spatialReference:e.spatialReference,hasZ:!!e.hasZ,hasM:!!e.hasM}}_dehydratedAddPointsCoordinate(e,t,r){r===0&&this._toAddInCurrentPath--==0&&(e.push([]),this._toAddInCurrentPath=this._lengths[++this._currentLengthIndex]-1,this._previousCoordinate[0]=0,this._previousCoordinate[1]=0);let s=this._transformPathLikeValue(t,r),n=e[e.length-1],o=this._coordinateBuffer;if(o){if(r===0){let a=this._coordinateBufferPtr*Float64Array.BYTES_PER_ELEMENT;n.push(new Float64Array(o.buffer,a,this._vertexDimension))}o[this._coordinateBufferPtr++]=s}}_deriveApplyTransform(e){let{hasZ:t,hasM:r}=e;return t&&r?M:t?v:r?F:l}};var d=class{_parseFeatureQuery(e){let t=new u(e.options),r=P(e.buffer,t),s=c(p({},r),{spatialReference:r.spatialReference?.toJSON(),fields:r.fields?r.fields.map(n=>n.toJSON()):void 0,missingAttributes:t.missingAttributes});return Promise.resolve(s)}};function O(){return new d}export{O as default};
