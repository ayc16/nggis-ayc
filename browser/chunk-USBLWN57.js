import{a as Z,b as ee,c as se,d as te,e as oe,f as re,g as ae,h as x,i as ne}from"./chunk-CAWVWNWA.js";import{a as j,b as U,d as Q,f as X,g as Y}from"./chunk-F7N72PQ7.js";import{c as v,d as K,e as V}from"./chunk-7EQBH2NW.js";import{f as J}from"./chunk-FI6XC3PH.js";import{b as W}from"./chunk-V2KSICSA.js";import"./chunk-R4TNLPIN.js";import{Q as G,_ as m,s as g}from"./chunk-CTGIUUCS.js";import"./chunk-VWEBO6QK.js";import{u as H}from"./chunk-KAAR5ZJN.js";import"./chunk-W3WDPWBE.js";import{a as z,h as u,k as L,u as $}from"./chunk-WKT5W7KT.js";import"./chunk-MLSR6YE6.js";import{a as S}from"./chunk-JPDAKIWT.js";import{p as q}from"./chunk-X3IDZTNG.js";import{a as E}from"./chunk-IQJU4QT3.js";import{a as w,b as y,h as p}from"./chunk-EAH6BNBL.js";var F={upload:{createFromFiles:.8,loadMesh:.2},uploadAssetBlobs:{prepareAssetItems:.9,uploadAssetItems:.1},uploadConvertibleSource:{uploadEditSource:.5,serviceAssetsToGlb:.5},uploadLocalMesh:{meshToAssetBlob:.5,uploadAssetBlobs:.5}};function h(t,s=o=>{},e){return new N(t,s,e)}var N=class{constructor(s,e=r=>{},o){if(this.onProgress=e,this.taskName=o,this._progressMap=new Map,this._startTime=void 0,this._timingsMap=new Map,typeof s=="number"){this._weights={};for(let r=0;r<s;r++){let a=r,n=1/s;this._weights[a]=n,this._progressMap.set(a,0)}}else this._weights=s;this.emitProgress()}emitProgress(){let s=0;for(let[e,o]of this._progressMap.entries())s+=o*this._weights[e];if(s===1&&E("enable-feature:esri-3dofl-upload-timings")){let e=Math.round(performance.now()-(this._startTime??0))/1e3;console.log(`${this.taskName} done in ${e} sec`);for(let[o,r]of this._timingsMap){let a=Math.round(r.end-r.start)/1e3,n=Math.round(a/e*100);console.log(this.taskName??"Task",{stepKey:o,stepTime:a,relativeTime:n})}}this.onProgress(s)}setProgress(s,e){if(this._progressMap.set(s,e),E("enable-feature:esri-3dofl-upload-timings")){let o=performance.now();this._startTime??=o;let r=H(this._timingsMap,s,()=>({start:o,end:0}));e===1&&(r.end=o)}this.emitProgress()}simulate(s,e){return k(o=>this.setProgress(s,o),e)}makeOnProgress(s){return e=>this.setProgress(s,e)}};function k(t=e=>{},s=Ue){let e=performance.now();t(0);let o=setInterval(()=>{let r=performance.now()-e,a=1-Math.exp(-r/s);t(a)},je);return z(()=>{clearInterval(o),t(1)})}function ie(t,s=Se){return S(t*le/s)}function ce(t,s=ve){return S(t*le/s)}var Se=10,ve=10,le=8e-6,je=50,Ue=1e3;var ue=1e6,pe=20*ue,xe=2e9,Ne=3;function me(a,n,i){return p(this,arguments,function*({data:t,name:s,description:e},o,r){let c=null;try{let l=g(o,"uploads"),d=g(l,"info"),{data:P}=yield m(d,{query:{f:"json"},responseType:"json"});u(r);let D=J(o),_=P.maxUploadFileSize*ue,we=D?xe:_,I=D?Math.min(pe,_):pe;if(t.size>we)throw new Error("Data too large");let ye=g(l,"register"),{data:B}=yield m(ye,{query:{f:"json",itemName:ke(s),description:e},responseType:"json",method:"post"});if(u(r),!B.success)throw new Error("Registration failed");let{itemID:Pe}=B.item;c=g(l,Pe);let Te=g(c,"uploadPart"),C=Math.ceil(t.size/I),T=new Array;for(let f=0;f<C;++f)T.push(t.slice(f*I,Math.min((f+1)*I,t.size)));let b=T.slice().reverse(),O=new Array,be=h(C,r?.onProgress,"uploadItem"),Ae=()=>p(this,null,function*(){for(;b.length!==0;){let f=T.length-b.length,A=b.pop(),M=new FormData,Fe=be.simulate(f,ie(A.size));try{M.append("f","json"),M.append("file",A),M.append("partId",`${f}`);let{data:Ie}=yield m(Te,{timeout:0,body:M,responseType:"json",method:"post"});if(u(r),!Ie.success)throw new Error("Part upload failed")}finally{Fe.remove()}}});for(let f=0;f<Ne&&b.length!==0;++f)O.push(Ae());yield Promise.all(O);let Me=g(c,"commit"),{data:R}=yield m(Me,{query:{f:"json",parts:T.map((f,A)=>A).join(",")},responseType:"json",method:"post"});if(u(r),!R.success)throw new Error("Commit failed");return R.item}catch(l){if(c!=null){let d=g(c,"delete");yield m(d,{query:{f:"json"},responseType:"json",method:"post"})}throw l}})}function ke(t){return t.replaceAll("/","_").replaceAll("\\","_")}function Ss(t,s,e){return p(this,null,function*(){let o=t.length;if(!o)return e?.onProgress?.(1),[];let r=h(o,e?.onProgress,"uploadAssets");return Promise.all(t.map((a,n)=>De(a,s,y(w({},e),{onProgress:r.makeOnProgress(n)}))))})}function De(r,a,n){return p(this,arguments,function*(t,{layer:s,ongoingUploads:e},o){let i=e.get(t);if(i)return i;if(!Xe(s))throw new Z;if(_e(t,s))return o?.onProgress?.(1),t;let c=Be(t,s,o);e.set(t,c);try{yield c}finally{e.delete(t)}return t})}function _e(t,s){let{parsedUrl:e}=s;return e!=null&&t.metadata.externalSources.some(o=>Q(o,e))}function Be(t,s,e){return p(this,null,function*(){let{metadata:o}=t,{displaySource:r}=o,a=de(r?.source,s),n=!!a,i=o.externalSources.length>0,c=n?Ce(a,s,e):i?Oe(t,s,e):Re(t,s,e),l=yield c;return u(e),t.addExternalSources([l]),t})}function Ce(t,s,e){return p(this,null,function*(){return{source:yield fe(t,s,e),original:!0}})}function Oe(t,s,e){return p(this,null,function*(){let o=he(s),{externalSources:r}=t.metadata,a=ze(r,s);if(!a)throw new se;let n=h(F.uploadConvertibleSource,e?.onProgress,"uploadConvertibleSource"),i=yield fe(a,s,{onProgress:n.makeOnProgress("uploadEditSource")});t.addExternalSources([{source:i,original:!0}]);let c=a.reduce((d,{asset:P})=>P instanceof File?d+P.size:d,0),l=n.simulate("serviceAssetsToGlb",ce(c));try{return{source:yield Ke(i,s,o)}}finally{l.remove()}})}function Re(t,s,e){return p(this,null,function*(){let o=h(F.uploadLocalMesh,e?.onProgress,"uploadLocalMesh"),r=qe(t,s,y(w({},e),{onProgress:o.makeOnProgress("meshToAssetBlob")}));return{source:yield ge([r],s,y(w({},e),{onProgress:o.makeOnProgress("uploadAssetBlobs")})),extent:t.extent.clone(),original:!0}})}function qe(t,s,e){return p(this,null,function*(){let o=he(s),r=yield t.load(e),a=yield r.toBinaryGLTF({ignoreLocalTransform:!0});u(e);let n=yield a.buffer();return u(e),{blob:new Blob([n.data],{type:n.type}),assetName:`${W()}.glb`,assetType:o}})}function ze(t,s){for(let e of t){let o=de(e.source,s);if(o)return o}return null}function de(t,s){if(!t)return null;let{infoFor3D:{supportedFormats:e,editFormats:o}}=s,r=Y(t),a=new Array,n=!1;for(let i=0;i<r.length;++i){let c=Le(r[i],e);if(!c)return null;o.includes(c.assetType)&&(n=!0),a.push(c)}return n?a:null}function Le(t,s){let e=X(t,s);return e?{asset:t,assetType:e}:null}function fe(t,s,e){return p(this,null,function*(){return ge(t.map(o=>$e(o,e)),s,e)})}function ge(t,s,e){return p(this,null,function*(){let o=h(F.uploadAssetBlobs,e?.onProgress,"uploadAssetBlobs"),r=yield Ge(t,s,y(w({},e),{onProgress:o.makeOnProgress("prepareAssetItems")}));u(e);let a=r.map(({item:i})=>i),{uploadResults:n}=yield We(a,s,y(w({},e),{onProgress:o.makeOnProgress("uploadAssetItems")}));return u(e),t.map((i,c)=>Je(r[c],n[c],s))})}function $e(t,s){return p(this,null,function*(){let{asset:e,assetType:o}=t;if(e instanceof File)return{blob:e,assetName:e.name,assetType:o};let r=yield e.toBlob(s);return u(s),{blob:r,assetName:e.assetName,assetType:o}})}function He(t,s,e){return p(this,null,function*(){let{blob:o,assetType:r,assetName:a}=t,n=null;try{let i=yield me({data:o,name:a},s.url,e);u(e),n={assetType:r,assetUploadId:i.itemID}}catch(i){L(i),Ye().warnOnce(`Service ${s.url} does not support the REST Uploads API.`)}if(!n){let i=yield G(o);if(u(e),!i.isBase64)throw new te;n={assetType:r,assetData:i.data}}if(!n)throw new oe;return{item:n,assetName:a}})}function Ge(t,s,e){let o=h(t.length,e?.onProgress,"prepareAssetItems");return Promise.all(t.map((r,a)=>p(this,null,function*(){let n=He(yield r,s,y(w({},e),{onProgress:o.makeOnProgress(a)}));return u(e),n})))}function We(t,s,e){return p(this,null,function*(){let o=k(e?.onProgress);try{let r=yield m(g(s.parsedUrl.path,"uploadAssets"),{timeout:0,query:{f:"json",assets:JSON.stringify(t)},method:"post",responseType:"json"});if(u(e),r.data.uploadResults.length!==t.length)throw new re(t.length,r.data.uploadResults.length);return r.data}finally{o.remove()}})}function Je(t,s,e){let{success:o}=s;if(!o){let{error:l}=s;throw new ae(t.assetName,l)}let{assetHash:r}=s,{assetName:a,item:{assetType:n}}=t,{infoFor3D:{supportedFormats:i}}=e,c=V(n,i);if(!c)throw new x(n);return new j(a,c,[new U(`${e.parsedUrl.path}/assets/${r}`,r)])}function Ke(t,s,e){return p(this,null,function*(){let o=t.map(({assetName:l,parts:d})=>({assetName:l,assetHash:d[0].partHash})),r=s.capabilities?.operations.supportsAsyncConvert3D,a={f:"json",assets:JSON.stringify(o),transportType:"esriTransportTypeUrl",targetFormat:e,async:r},n=g(s.parsedUrl.path,"convert3D"),i;try{i=(yield(r?Qe:Ve)(n,{query:a,responseType:"json",timeout:0})).data}catch{throw new ne}let{supportedFormats:c}=s.infoFor3D;return i.assets.map(l=>{let d=v(l.contentType,c);if(!d)throw new x(d);return new j(l.assetName,l.contentType,[new U(l.assetURL,l.assetHash)])})})}function Ve(t,s){return m(t,s)}function Qe(t,s){return p(this,null,function*(){let e=(yield m(t,s)).data.statusUrl;for(;;){let o=(yield m(e,{query:{f:"json"},responseType:"json"})).data;switch(o.status){case"Completed":return m(o.resultUrl,{query:{f:"json"},responseType:"json"});case"CompletedWithErrors":throw new Error(o.status);case"Failed ImportChanges":case"InProgress":case"Pending":case"ExportAttachments":case"ExportChanges":case"ExportingData":case"ExportingSnapshot":case"ImportAttachments":case"ProvisioningReplica":case"UnRegisteringReplica":break;default:throw new Error}yield $(Ze)}})}function Xe(t){return!!t.infoFor3D&&!!t.url}function he(t){let{infoFor3D:s}=t,e=v("model/gltf-binary",s.supportedFormats)??K("glb",s.supportedFormats);if(!e)throw new ee;return e}function Ye(){return q.getLogger("esri.layers.graphics.sources.support.uploadAssets")}var Ze=1e3;export{Ss as uploadAssets};
