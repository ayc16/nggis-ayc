import{b as J,f as v}from"./chunk-MUQSEGYR.js";import{a as g,b as P,k as B}from"./chunk-QIHQRWLR.js";import{F as y,G as N,R as w,l as u}from"./chunk-WJURCFIQ.js";import{A as b,G as z,a as r,q as S,s as d,t as x,u as O,v as h,z as k}from"./chunk-FT46PIGB.js";import"./chunk-YUIUJIOR.js";import"./chunk-VAIXCJGK.js";import"./chunk-2O2C5MZC.js";import"./chunk-MFP2OFDR.js";import{a as p}from"./chunk-XFK3CDZ5.js";import"./chunk-4XBATNKX.js";import"./chunk-3IJY37BG.js";import"./chunk-SAOUSUZE.js";import"./chunk-IFPBW5UQ.js";import"./chunk-RHHHYJSZ.js";import"./chunk-QBQKFGOZ.js";import"./chunk-XKXYUJUA.js";import"./chunk-F7PIPM6E.js";import"./chunk-FR6Q4MSQ.js";import"./chunk-C6JT6KYF.js";import"./chunk-BCREO4Q5.js";import"./chunk-Z5Q76SB7.js";import"./chunk-E5R4OI7X.js";import"./chunk-6FWNINU2.js";import"./chunk-ES7AH7WX.js";import"./chunk-RSDQHAJX.js";import"./chunk-RJHITHLB.js";import{j as f,t as l}from"./chunk-UI76XBLJ.js";import"./chunk-UE2YGKE7.js";import"./chunk-BE76S5KT.js";import"./chunk-D2ITYHSM.js";import"./chunk-FIITBHDP.js";import"./chunk-VSVNPPHQ.js";import"./chunk-CTGIUUCS.js";import"./chunk-VWEBO6QK.js";import"./chunk-KAAR5ZJN.js";import"./chunk-W3WDPWBE.js";import"./chunk-WKT5W7KT.js";import"./chunk-MLSR6YE6.js";import"./chunk-JPDAKIWT.js";import"./chunk-VU5W7W6Y.js";import"./chunk-X3IDZTNG.js";import"./chunk-IQJU4QT3.js";import{a as n,b as m,h as a}from"./chunk-EAH6BNBL.js";var D=class{convertVectorFieldData(t){let e=r.fromJSON(t.pixelBlock),s=b(e,t.type);return Promise.resolve(s!=null?s.toJSON():null)}computeStatisticsHistograms(t){let e=r.fromJSON(t.pixelBlock),s=y(e);return Promise.resolve(s)}decode(t){return a(this,null,function*(){let e=yield u(t.data,t.options);return e&&e.toJSON()})}symbolize(t){t.pixelBlock=r.fromJSON(t.pixelBlock),t.extent=t.extent?l.fromJSON(t.extent):null;let e=this.symbolizer.symbolize(t);return Promise.resolve(e!=null?e.toJSON():null)}updateSymbolizer(t){return a(this,null,function*(){this.symbolizer=w.fromJSON(t.symbolizerJSON),t.histograms&&this.symbolizer?.rendererJSON.type==="rasterStretch"&&(this.symbolizer.rendererJSON.histograms=t.histograms)})}updateRasterFunction(t){return a(this,null,function*(){this.rasterFunction=J(t.rasterFunctionJSON)})}process(t){return a(this,null,function*(){let e=this.rasterFunction.process({extent:l.fromJSON(t.extent),primaryPixelBlocks:t.primaryPixelBlocks.map(s=>s!=null?r.fromJSON(s):null),primaryPixelSizes:t.primaryPixelSizes?.map(s=>s!=null?f.fromJSON(s):null),primaryRasterIds:t.primaryRasterIds});return e!=null?e.toJSON():null})}stretch(t){let e=this.symbolizer.simpleStretch(r.fromJSON(t.srcPixelBlock),t.stretchParams);return Promise.resolve(e?.toJSON())}estimateStatisticsHistograms(t){let e=N(r.fromJSON(t.srcPixelBlock));return Promise.resolve(e)}split(t){let e=d(r.fromJSON(t.srcPixelBlock),t.tileSize,t.maximumPyramidLevel??0,t.useBilinear===!1);return e&&e.forEach((s,o)=>{e.set(o,s?.toJSON())}),Promise.resolve(e)}clipTile(t){let e=r.fromJSON(t.pixelBlock),s=x(m(n({},t),{pixelBlock:e}));return Promise.resolve(s?.toJSON())}mosaicAndTransform(t){return a(this,null,function*(){let e=t.srcPixelBlocks.map(c=>c?new r(c):null),s=S(e,t.srcMosaicSize,{blockWidths:t.blockWidths,alignmentInfo:t.alignmentInfo,clipOffset:t.clipOffset,clipSize:t.clipSize}),o,i=s;return t.coefs&&(i=h(s,t.destDimension,t.coefs,t.sampleSpacing,t.interpolation)),t.projectDirections&&t.gcsGrid&&(o=O(t.destDimension,t.gcsGrid),i=k(i,t.isUV?"vector-uv":"vector-magdir",o)),{pixelBlock:i?.toJSON(),localNorthDirections:o}})}createFlowMesh(t,e){return a(this,null,function*(){let s={data:new Float32Array(t.flowData.buffer),mask:new Uint8Array(t.flowData.maskBuffer),width:t.flowData.width,height:t.flowData.height},{vertexData:o,indexData:i}=yield z(t.meshType,t.simulationSettings,s,e.signal);return{result:{vertexBuffer:o.buffer,indexBuffer:i.buffer},transferList:[o.buffer,i.buffer]}})}getProjectionOffsetGrid(t){return a(this,null,function*(){let e=l.fromJSON(t.projectedExtent),s=l.fromJSON(t.srcBufferExtent),o=null;t.datumTransformationSteps&&(o=new p({steps:t.datumTransformationSteps})),(t.includeGCSGrid||g(e.spatialReference,s.spatialReference,o))&&(yield P());let i=t.rasterTransform?v(t.rasterTransform):null;return B(m(n({},t),{projectedExtent:e,srcBufferExtent:s,datumTransformation:o,rasterTransform:i}))})}};export{D as default};
