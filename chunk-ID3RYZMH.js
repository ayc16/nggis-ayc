import{b as v,c as G,d as I,e as j}from"./chunk-SSAUE36S.js";import{a as w,b as T,k as z}from"./chunk-6YAIPXES.js";import{F as b,G as k,R as E,l as O}from"./chunk-PDJNQQ6O.js";import{A as D,B as F,H as R,b as s,r as N,t as J,u as g,v as P,w as B}from"./chunk-TJFEDBYJ.js";import"./chunk-YUIUJIOR.js";import"./chunk-H63LVRK7.js";import"./chunk-VXW5JMKD.js";import"./chunk-UJ6V7JUK.js";import"./chunk-OM7Z3UKX.js";import"./chunk-KRMYHUR3.js";import{b as h}from"./chunk-7G4KK3KW.js";import"./chunk-J3ZDC5ZE.js";import"./chunk-KYNKUTEO.js";import"./chunk-QWLQUMDY.js";import"./chunk-SAOUSUZE.js";import"./chunk-LECQV7I4.js";import"./chunk-4HISZWR4.js";import"./chunk-33BSK37G.js";import{a as x}from"./chunk-TQAPQODA.js";import"./chunk-M2GLXRA2.js";import"./chunk-MRVR6F6G.js";import"./chunk-WXQQZY3K.js";import"./chunk-VPMDQK57.js";import"./chunk-BCREO4Q5.js";import"./chunk-ZVHU7VE3.js";import"./chunk-76YVRX2R.js";import"./chunk-OZF6BMOL.js";import"./chunk-GJP6PTKT.js";import"./chunk-RSDQHAJX.js";import"./chunk-SLMQFZE3.js";import{l as y,v as n}from"./chunk-SA4OMQAD.js";import"./chunk-24BLFS5R.js";import"./chunk-JDDD6VJ4.js";import"./chunk-VOYK3LZF.js";import"./chunk-XNEAL2YW.js";import"./chunk-J7M5V2SQ.js";import"./chunk-RQD6EDD6.js";import"./chunk-XPCG2OJX.js";import"./chunk-AUTL5LCV.js";import{S}from"./chunk-KUJG22IX.js";import"./chunk-OVHPPCBL.js";import{a as p}from"./chunk-W3WDPWBE.js";import"./chunk-GISCFF3Z.js";import"./chunk-MLSR6YE6.js";import"./chunk-SNFOAZZQ.js";import"./chunk-CPDJJRWA.js";import"./chunk-VU5W7W6Y.js";import"./chunk-HQMV3KQV.js";import"./chunk-CRMMDK2Z.js";import{a as c,b as f,h as a}from"./chunk-EAH6BNBL.js";var u,l=u=class extends G{constructor(){super(...arguments),this.type="identity"}clone(){return new u}};p([x({IdentityXform:"identity"})],l.prototype,"type",void 0),l=u=p([S("esri.layers.support.rasterTransforms.IdentityTransform")],l);var A=l;var H={GCSShiftXform:I,IdentityXform:A,PolynomialXform:j},et=Object.keys(H);function L(m){if(!m?.type)return null;let e=H[m?.type];if(e){let r=new e;return r.read(m),r}return null}var X=class{convertVectorFieldData(t){let e=s.fromJSON(t.pixelBlock),r=F(e,t.type);return Promise.resolve(r!=null?r.toJSON():null)}computeStatisticsHistograms(t){let e=s.fromJSON(t.pixelBlock),r=b(e);return Promise.resolve(r)}decode(t){return a(this,null,function*(){let e=yield O(t.data,t.options);return e&&e.toJSON()})}symbolize(t){t.pixelBlock=s.fromJSON(t.pixelBlock),t.extent=t.extent?n.fromJSON(t.extent):null;let e=this.symbolizer.symbolize(t);return Promise.resolve(e!=null?e.toJSON():null)}updateSymbolizer(t){return a(this,null,function*(){this.symbolizer=E.fromJSON(t.symbolizerJSON),t.histograms&&this.symbolizer?.rendererJSON.type==="rasterStretch"&&(this.symbolizer.rendererJSON.histograms=t.histograms)})}updateRasterFunction(t){return a(this,null,function*(){this.rasterFunction=v(t.rasterFunctionJSON)})}process(t){return a(this,null,function*(){let e=this.rasterFunction.process({extent:n.fromJSON(t.extent),primaryPixelBlocks:t.primaryPixelBlocks.map(r=>r!=null?s.fromJSON(r):null),primaryPixelSizes:t.primaryPixelSizes?.map(r=>r!=null?y.fromJSON(r):null),primaryRasterIds:t.primaryRasterIds});return e!=null?e.toJSON():null})}stretch(t){let e=this.symbolizer.simpleStretch(s.fromJSON(t.srcPixelBlock),t.stretchParams);return Promise.resolve(e?.toJSON())}estimateStatisticsHistograms(t){let e=k(s.fromJSON(t.srcPixelBlock));return Promise.resolve(e)}split(t){let e=J(s.fromJSON(t.srcPixelBlock),t.tileSize,t.maximumPyramidLevel??0,t.useBilinear===!1);return e&&e.forEach((r,o)=>{e.set(o,r?.toJSON())}),Promise.resolve(e)}clipTile(t){let e=s.fromJSON(t.pixelBlock),r=g(f(c({},t),{pixelBlock:e}));return Promise.resolve(r?.toJSON())}mosaicAndTransform(t){return a(this,null,function*(){let e=t.srcPixelBlocks.map(d=>d?new s(d):null),r=N(e,t.srcMosaicSize,{blockWidths:t.blockWidths,alignmentInfo:t.alignmentInfo,clipOffset:t.clipOffset,clipSize:t.clipSize}),o,i=r;return t.coefs&&(i=B(r,t.destDimension,t.coefs,t.sampleSpacing,t.interpolation)),t.projectDirections&&t.gcsGrid&&(o=P(t.destDimension,t.gcsGrid),i=D(i,t.isUV?"vector-uv":"vector-magdir",o)),{pixelBlock:i?.toJSON(),localNorthDirections:o}})}createFlowMesh(t,e){return a(this,null,function*(){let r={data:new Float32Array(t.flowData.buffer),mask:new Uint8Array(t.flowData.maskBuffer),width:t.flowData.width,height:t.flowData.height},{vertexData:o,indexData:i}=yield R(t.meshType,t.simulationSettings,r,e.signal);return{result:{vertexBuffer:o.buffer,indexBuffer:i.buffer},transferList:[o.buffer,i.buffer]}})}getProjectionOffsetGrid(t){return a(this,null,function*(){let e=n.fromJSON(t.projectedExtent),r=n.fromJSON(t.srcBufferExtent),o=null;t.datumTransformationSteps&&(o=new h({steps:t.datumTransformationSteps})),(t.includeGCSGrid||w(e.spatialReference,r.spatialReference,o))&&(yield T());let i=t.rasterTransform?L(t.rasterTransform):null;return z(f(c({},t),{projectedExtent:e,srcBufferExtent:r,datumTransformation:o,rasterTransform:i}))})}};export{X as default};
